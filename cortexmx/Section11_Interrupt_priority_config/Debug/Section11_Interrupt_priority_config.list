
Section11_Interrupt_priority_config.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000c48  080001c4  080001c4  000101c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000090  08000e0c  08000e0c  00010e0c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08000e9c  08000e9c  00020070  2**0
                  CONTENTS
  4 .ARM          00000000  08000e9c  08000e9c  00020070  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000e9c  08000e9c  00020070  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000e9c  08000e9c  00010e9c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000ea0  08000ea0  00010ea0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000070  20000000  08000ea4  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000002c  20000070  08000f14  00020070  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000009c  08000f14  0002009c  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  00020070  2**0
                  CONTENTS, READONLY
 12 .debug_info   000021b8  00000000  00000000  0002009a  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 00000619  00000000  00000000  00022252  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000130  00000000  00000000  00022870  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 000000f8  00000000  00000000  000229a0  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00002a9e  00000000  00000000  00022a98  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   000012d9  00000000  00000000  00025536  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    000091b1  00000000  00000000  0002680f  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  0002f9c0  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000984  00000000  00000000  0002fa3c  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	; (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	; (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20000070 	.word	0x20000070
 80001e0:	00000000 	.word	0x00000000
 80001e4:	08000df4 	.word	0x08000df4

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	; (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	; (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	; (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	20000074 	.word	0x20000074
 8000200:	08000df4 	.word	0x08000df4

08000204 <configure_priority_for_irqs>:
uint32_t *pNVIC_IPRBase = (uint32_t*)0xE000E400;
uint32_t *pNVIC_ISERBase = (uint32_t*)0xE000E100;
uint32_t *pNVIC_ISPRBase = (uint32_t*)0xE000E200;

void configure_priority_for_irqs(uint8_t irq_no, uint8_t priority_value)
{
 8000204:	b480      	push	{r7}
 8000206:	b087      	sub	sp, #28
 8000208:	af00      	add	r7, sp, #0
 800020a:	4603      	mov	r3, r0
 800020c:	460a      	mov	r2, r1
 800020e:	71fb      	strb	r3, [r7, #7]
 8000210:	4613      	mov	r3, r2
 8000212:	71bb      	strb	r3, [r7, #6]
	//1. find out iprx
	uint8_t iprx = irq_no / 4;
 8000214:	79fb      	ldrb	r3, [r7, #7]
 8000216:	089b      	lsrs	r3, r3, #2
 8000218:	75fb      	strb	r3, [r7, #23]
	uint32_t *ipr = pNVIC_IPRBase + iprx;
 800021a:	4b12      	ldr	r3, [pc, #72]	; (8000264 <configure_priority_for_irqs+0x60>)
 800021c:	681a      	ldr	r2, [r3, #0]
 800021e:	7dfb      	ldrb	r3, [r7, #23]
 8000220:	009b      	lsls	r3, r3, #2
 8000222:	4413      	add	r3, r2
 8000224:	613b      	str	r3, [r7, #16]

	//2. position in iprx
	uint8_t pos = (irq_no % 4) * 8;
 8000226:	79fb      	ldrb	r3, [r7, #7]
 8000228:	f003 0303 	and.w	r3, r3, #3
 800022c:	b2db      	uxtb	r3, r3
 800022e:	00db      	lsls	r3, r3, #3
 8000230:	73fb      	strb	r3, [r7, #15]

	//3. configure the priority
	*ipr &= ~(0xFF << pos); 	     //clear
 8000232:	693b      	ldr	r3, [r7, #16]
 8000234:	681b      	ldr	r3, [r3, #0]
 8000236:	7bfa      	ldrb	r2, [r7, #15]
 8000238:	21ff      	movs	r1, #255	; 0xff
 800023a:	fa01 f202 	lsl.w	r2, r1, r2
 800023e:	43d2      	mvns	r2, r2
 8000240:	401a      	ands	r2, r3
 8000242:	693b      	ldr	r3, [r7, #16]
 8000244:	601a      	str	r2, [r3, #0]
	*ipr |= (priority_value << pos); //set
 8000246:	693b      	ldr	r3, [r7, #16]
 8000248:	681b      	ldr	r3, [r3, #0]
 800024a:	79b9      	ldrb	r1, [r7, #6]
 800024c:	7bfa      	ldrb	r2, [r7, #15]
 800024e:	fa01 f202 	lsl.w	r2, r1, r2
 8000252:	431a      	orrs	r2, r3
 8000254:	693b      	ldr	r3, [r7, #16]
 8000256:	601a      	str	r2, [r3, #0]
}
 8000258:	bf00      	nop
 800025a:	371c      	adds	r7, #28
 800025c:	46bd      	mov	sp, r7
 800025e:	bc80      	pop	{r7}
 8000260:	4770      	bx	lr
 8000262:	bf00      	nop
 8000264:	20000000 	.word	0x20000000

08000268 <main>:

int main(void)
{
 8000268:	b580      	push	{r7, lr}
 800026a:	af00      	add	r7, sp, #0
	//1. Lets configure the priority for the peripherals
	configure_priority_for_irqs(IRQNO_TIMER2, 0x80);
 800026c:	2180      	movs	r1, #128	; 0x80
 800026e:	201c      	movs	r0, #28
 8000270:	f7ff ffc8 	bl	8000204 <configure_priority_for_irqs>
	configure_priority_for_irqs(IRQNO_I2C1, 0x80); //0x70
 8000274:	2180      	movs	r1, #128	; 0x80
 8000276:	201f      	movs	r0, #31
 8000278:	f7ff ffc4 	bl	8000204 <configure_priority_for_irqs>

	//2. Set the interrupt pending bit in the NVIC PR
	*pNVIC_ISPRBase |= (1 << IRQNO_TIMER2);
 800027c:	4b0d      	ldr	r3, [pc, #52]	; (80002b4 <main+0x4c>)
 800027e:	681b      	ldr	r3, [r3, #0]
 8000280:	681a      	ldr	r2, [r3, #0]
 8000282:	4b0c      	ldr	r3, [pc, #48]	; (80002b4 <main+0x4c>)
 8000284:	681b      	ldr	r3, [r3, #0]
 8000286:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800028a:	601a      	str	r2, [r3, #0]

	//3. Enable the IRQs in NVIC ISER
	*pNVIC_ISERBase |= (1 << IRQNO_I2C1);
 800028c:	4b0a      	ldr	r3, [pc, #40]	; (80002b8 <main+0x50>)
 800028e:	681b      	ldr	r3, [r3, #0]
 8000290:	681a      	ldr	r2, [r3, #0]
 8000292:	4b09      	ldr	r3, [pc, #36]	; (80002b8 <main+0x50>)
 8000294:	681b      	ldr	r3, [r3, #0]
 8000296:	f042 4200 	orr.w	r2, r2, #2147483648	; 0x80000000
 800029a:	601a      	str	r2, [r3, #0]
	*pNVIC_ISERBase |= (1 << IRQNO_TIMER2);
 800029c:	4b06      	ldr	r3, [pc, #24]	; (80002b8 <main+0x50>)
 800029e:	681b      	ldr	r3, [r3, #0]
 80002a0:	681a      	ldr	r2, [r3, #0]
 80002a2:	4b05      	ldr	r3, [pc, #20]	; (80002b8 <main+0x50>)
 80002a4:	681b      	ldr	r3, [r3, #0]
 80002a6:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80002aa:	601a      	str	r2, [r3, #0]
 80002ac:	2300      	movs	r3, #0

}
 80002ae:	4618      	mov	r0, r3
 80002b0:	bd80      	pop	{r7, pc}
 80002b2:	bf00      	nop
 80002b4:	20000008 	.word	0x20000008
 80002b8:	20000004 	.word	0x20000004

080002bc <TIM2_IRQHandler>:

//isrs

void TIM2_IRQHandler(void)
{
 80002bc:	b580      	push	{r7, lr}
 80002be:	af00      	add	r7, sp, #0
	printf("[TIM2_IRQHandler]\n");
 80002c0:	4805      	ldr	r0, [pc, #20]	; (80002d8 <TIM2_IRQHandler+0x1c>)
 80002c2:	f000 f98b 	bl	80005dc <puts>
	*pNVIC_ISPRBase |= (1 << IRQNO_I2C1); //interrupt nesting: if priority of nested interrupt is higher and preempts the current interrupt
 80002c6:	4b05      	ldr	r3, [pc, #20]	; (80002dc <TIM2_IRQHandler+0x20>)
 80002c8:	681b      	ldr	r3, [r3, #0]
 80002ca:	681a      	ldr	r2, [r3, #0]
 80002cc:	4b03      	ldr	r3, [pc, #12]	; (80002dc <TIM2_IRQHandler+0x20>)
 80002ce:	681b      	ldr	r3, [r3, #0]
 80002d0:	f042 4200 	orr.w	r2, r2, #2147483648	; 0x80000000
 80002d4:	601a      	str	r2, [r3, #0]
	while(1);
 80002d6:	e7fe      	b.n	80002d6 <TIM2_IRQHandler+0x1a>
 80002d8:	08000e0c 	.word	0x08000e0c
 80002dc:	20000008 	.word	0x20000008

080002e0 <I2C1_EV_IRQHandler>:
}

void I2C1_EV_IRQHandler(void)
{
 80002e0:	b580      	push	{r7, lr}
 80002e2:	af00      	add	r7, sp, #0
	printf("[I2C1_EV_IRQHandler]\n");
 80002e4:	4802      	ldr	r0, [pc, #8]	; (80002f0 <I2C1_EV_IRQHandler+0x10>)
 80002e6:	f000 f979 	bl	80005dc <puts>
}
 80002ea:	bf00      	nop
 80002ec:	bd80      	pop	{r7, pc}
 80002ee:	bf00      	nop
 80002f0:	08000e20 	.word	0x08000e20

080002f4 <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 80002f4:	b480      	push	{r7}
 80002f6:	b083      	sub	sp, #12
 80002f8:	af00      	add	r7, sp, #0
 80002fa:	4603      	mov	r3, r0
 80002fc:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 80002fe:	4b0e      	ldr	r3, [pc, #56]	; (8000338 <ITM_SendChar+0x44>)
 8000300:	681b      	ldr	r3, [r3, #0]
 8000302:	4a0d      	ldr	r2, [pc, #52]	; (8000338 <ITM_SendChar+0x44>)
 8000304:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000308:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 800030a:	4b0c      	ldr	r3, [pc, #48]	; (800033c <ITM_SendChar+0x48>)
 800030c:	681b      	ldr	r3, [r3, #0]
 800030e:	4a0b      	ldr	r2, [pc, #44]	; (800033c <ITM_SendChar+0x48>)
 8000310:	f043 0301 	orr.w	r3, r3, #1
 8000314:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 8000316:	bf00      	nop
 8000318:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 800031c:	681b      	ldr	r3, [r3, #0]
 800031e:	f003 0301 	and.w	r3, r3, #1
 8000322:	2b00      	cmp	r3, #0
 8000324:	d0f8      	beq.n	8000318 <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 8000326:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 800032a:	79fb      	ldrb	r3, [r7, #7]
 800032c:	6013      	str	r3, [r2, #0]
}
 800032e:	bf00      	nop
 8000330:	370c      	adds	r7, #12
 8000332:	46bd      	mov	sp, r7
 8000334:	bc80      	pop	{r7}
 8000336:	4770      	bx	lr
 8000338:	e000edfc 	.word	0xe000edfc
 800033c:	e0000e00 	.word	0xe0000e00

08000340 <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000340:	b580      	push	{r7, lr}
 8000342:	b086      	sub	sp, #24
 8000344:	af00      	add	r7, sp, #0
 8000346:	60f8      	str	r0, [r7, #12]
 8000348:	60b9      	str	r1, [r7, #8]
 800034a:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800034c:	2300      	movs	r3, #0
 800034e:	617b      	str	r3, [r7, #20]
 8000350:	e00a      	b.n	8000368 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 8000352:	f3af 8000 	nop.w
 8000356:	4601      	mov	r1, r0
 8000358:	68bb      	ldr	r3, [r7, #8]
 800035a:	1c5a      	adds	r2, r3, #1
 800035c:	60ba      	str	r2, [r7, #8]
 800035e:	b2ca      	uxtb	r2, r1
 8000360:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000362:	697b      	ldr	r3, [r7, #20]
 8000364:	3301      	adds	r3, #1
 8000366:	617b      	str	r3, [r7, #20]
 8000368:	697a      	ldr	r2, [r7, #20]
 800036a:	687b      	ldr	r3, [r7, #4]
 800036c:	429a      	cmp	r2, r3
 800036e:	dbf0      	blt.n	8000352 <_read+0x12>
	}

return len;
 8000370:	687b      	ldr	r3, [r7, #4]
}
 8000372:	4618      	mov	r0, r3
 8000374:	3718      	adds	r7, #24
 8000376:	46bd      	mov	sp, r7
 8000378:	bd80      	pop	{r7, pc}

0800037a <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800037a:	b580      	push	{r7, lr}
 800037c:	b086      	sub	sp, #24
 800037e:	af00      	add	r7, sp, #0
 8000380:	60f8      	str	r0, [r7, #12]
 8000382:	60b9      	str	r1, [r7, #8]
 8000384:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000386:	2300      	movs	r3, #0
 8000388:	617b      	str	r3, [r7, #20]
 800038a:	e009      	b.n	80003a0 <_write+0x26>
	{
		//__io_putchar(*ptr++);
		ITM_SendChar(*ptr++);
 800038c:	68bb      	ldr	r3, [r7, #8]
 800038e:	1c5a      	adds	r2, r3, #1
 8000390:	60ba      	str	r2, [r7, #8]
 8000392:	781b      	ldrb	r3, [r3, #0]
 8000394:	4618      	mov	r0, r3
 8000396:	f7ff ffad 	bl	80002f4 <ITM_SendChar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800039a:	697b      	ldr	r3, [r7, #20]
 800039c:	3301      	adds	r3, #1
 800039e:	617b      	str	r3, [r7, #20]
 80003a0:	697a      	ldr	r2, [r7, #20]
 80003a2:	687b      	ldr	r3, [r7, #4]
 80003a4:	429a      	cmp	r2, r3
 80003a6:	dbf1      	blt.n	800038c <_write+0x12>
	}
	return len;
 80003a8:	687b      	ldr	r3, [r7, #4]
}
 80003aa:	4618      	mov	r0, r3
 80003ac:	3718      	adds	r7, #24
 80003ae:	46bd      	mov	sp, r7
 80003b0:	bd80      	pop	{r7, pc}

080003b2 <_close>:

int _close(int file)
{
 80003b2:	b480      	push	{r7}
 80003b4:	b083      	sub	sp, #12
 80003b6:	af00      	add	r7, sp, #0
 80003b8:	6078      	str	r0, [r7, #4]
	return -1;
 80003ba:	f04f 33ff 	mov.w	r3, #4294967295
}
 80003be:	4618      	mov	r0, r3
 80003c0:	370c      	adds	r7, #12
 80003c2:	46bd      	mov	sp, r7
 80003c4:	bc80      	pop	{r7}
 80003c6:	4770      	bx	lr

080003c8 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80003c8:	b480      	push	{r7}
 80003ca:	b083      	sub	sp, #12
 80003cc:	af00      	add	r7, sp, #0
 80003ce:	6078      	str	r0, [r7, #4]
 80003d0:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 80003d2:	683b      	ldr	r3, [r7, #0]
 80003d4:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80003d8:	605a      	str	r2, [r3, #4]
	return 0;
 80003da:	2300      	movs	r3, #0
}
 80003dc:	4618      	mov	r0, r3
 80003de:	370c      	adds	r7, #12
 80003e0:	46bd      	mov	sp, r7
 80003e2:	bc80      	pop	{r7}
 80003e4:	4770      	bx	lr

080003e6 <_isatty>:

int _isatty(int file)
{
 80003e6:	b480      	push	{r7}
 80003e8:	b083      	sub	sp, #12
 80003ea:	af00      	add	r7, sp, #0
 80003ec:	6078      	str	r0, [r7, #4]
	return 1;
 80003ee:	2301      	movs	r3, #1
}
 80003f0:	4618      	mov	r0, r3
 80003f2:	370c      	adds	r7, #12
 80003f4:	46bd      	mov	sp, r7
 80003f6:	bc80      	pop	{r7}
 80003f8:	4770      	bx	lr

080003fa <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80003fa:	b480      	push	{r7}
 80003fc:	b085      	sub	sp, #20
 80003fe:	af00      	add	r7, sp, #0
 8000400:	60f8      	str	r0, [r7, #12]
 8000402:	60b9      	str	r1, [r7, #8]
 8000404:	607a      	str	r2, [r7, #4]
	return 0;
 8000406:	2300      	movs	r3, #0
}
 8000408:	4618      	mov	r0, r3
 800040a:	3714      	adds	r7, #20
 800040c:	46bd      	mov	sp, r7
 800040e:	bc80      	pop	{r7}
 8000410:	4770      	bx	lr
	...

08000414 <_sbrk>:
/**
 _sbrk
 Increase program data space. Malloc and related functions depend on this
**/
caddr_t _sbrk(int incr)
{
 8000414:	b580      	push	{r7, lr}
 8000416:	b084      	sub	sp, #16
 8000418:	af00      	add	r7, sp, #0
 800041a:	6078      	str	r0, [r7, #4]
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 800041c:	4b11      	ldr	r3, [pc, #68]	; (8000464 <_sbrk+0x50>)
 800041e:	681b      	ldr	r3, [r3, #0]
 8000420:	2b00      	cmp	r3, #0
 8000422:	d102      	bne.n	800042a <_sbrk+0x16>
		heap_end = &end;
 8000424:	4b0f      	ldr	r3, [pc, #60]	; (8000464 <_sbrk+0x50>)
 8000426:	4a10      	ldr	r2, [pc, #64]	; (8000468 <_sbrk+0x54>)
 8000428:	601a      	str	r2, [r3, #0]

	prev_heap_end = heap_end;
 800042a:	4b0e      	ldr	r3, [pc, #56]	; (8000464 <_sbrk+0x50>)
 800042c:	681b      	ldr	r3, [r3, #0]
 800042e:	60fb      	str	r3, [r7, #12]
	if (heap_end + incr > stack_ptr)
 8000430:	4b0c      	ldr	r3, [pc, #48]	; (8000464 <_sbrk+0x50>)
 8000432:	681a      	ldr	r2, [r3, #0]
 8000434:	687b      	ldr	r3, [r7, #4]
 8000436:	4413      	add	r3, r2
 8000438:	466a      	mov	r2, sp
 800043a:	4293      	cmp	r3, r2
 800043c:	d907      	bls.n	800044e <_sbrk+0x3a>
	{
		errno = ENOMEM;
 800043e:	f000 f83f 	bl	80004c0 <__errno>
 8000442:	4602      	mov	r2, r0
 8000444:	230c      	movs	r3, #12
 8000446:	6013      	str	r3, [r2, #0]
		return (caddr_t) -1;
 8000448:	f04f 33ff 	mov.w	r3, #4294967295
 800044c:	e006      	b.n	800045c <_sbrk+0x48>
	}

	heap_end += incr;
 800044e:	4b05      	ldr	r3, [pc, #20]	; (8000464 <_sbrk+0x50>)
 8000450:	681a      	ldr	r2, [r3, #0]
 8000452:	687b      	ldr	r3, [r7, #4]
 8000454:	4413      	add	r3, r2
 8000456:	4a03      	ldr	r2, [pc, #12]	; (8000464 <_sbrk+0x50>)
 8000458:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
 800045a:	68fb      	ldr	r3, [r7, #12]
}
 800045c:	4618      	mov	r0, r3
 800045e:	3710      	adds	r7, #16
 8000460:	46bd      	mov	sp, r7
 8000462:	bd80      	pop	{r7, pc}
 8000464:	2000008c 	.word	0x2000008c
 8000468:	200000a0 	.word	0x200000a0

0800046c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800046c:	480d      	ldr	r0, [pc, #52]	; (80004a4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800046e:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000470:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000474:	480c      	ldr	r0, [pc, #48]	; (80004a8 <LoopForever+0x6>)
  ldr r1, =_edata
 8000476:	490d      	ldr	r1, [pc, #52]	; (80004ac <LoopForever+0xa>)
  ldr r2, =_sidata
 8000478:	4a0d      	ldr	r2, [pc, #52]	; (80004b0 <LoopForever+0xe>)
  movs r3, #0
 800047a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800047c:	e002      	b.n	8000484 <LoopCopyDataInit>

0800047e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800047e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000480:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000482:	3304      	adds	r3, #4

08000484 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000484:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000486:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000488:	d3f9      	bcc.n	800047e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800048a:	4a0a      	ldr	r2, [pc, #40]	; (80004b4 <LoopForever+0x12>)
  ldr r4, =_ebss
 800048c:	4c0a      	ldr	r4, [pc, #40]	; (80004b8 <LoopForever+0x16>)
  movs r3, #0
 800048e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000490:	e001      	b.n	8000496 <LoopFillZerobss>

08000492 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000492:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000494:	3204      	adds	r2, #4

08000496 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000496:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000498:	d3fb      	bcc.n	8000492 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800049a:	f000 f817 	bl	80004cc <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800049e:	f7ff fee3 	bl	8000268 <main>

080004a2 <LoopForever>:

LoopForever:
    b LoopForever
 80004a2:	e7fe      	b.n	80004a2 <LoopForever>
  ldr   r0, =_estack
 80004a4:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80004a8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80004ac:	20000070 	.word	0x20000070
  ldr r2, =_sidata
 80004b0:	08000ea4 	.word	0x08000ea4
  ldr r2, =_sbss
 80004b4:	20000070 	.word	0x20000070
  ldr r4, =_ebss
 80004b8:	2000009c 	.word	0x2000009c

080004bc <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80004bc:	e7fe      	b.n	80004bc <ADC_IRQHandler>
	...

080004c0 <__errno>:
 80004c0:	4b01      	ldr	r3, [pc, #4]	; (80004c8 <__errno+0x8>)
 80004c2:	6818      	ldr	r0, [r3, #0]
 80004c4:	4770      	bx	lr
 80004c6:	bf00      	nop
 80004c8:	2000000c 	.word	0x2000000c

080004cc <__libc_init_array>:
 80004cc:	b570      	push	{r4, r5, r6, lr}
 80004ce:	4e0d      	ldr	r6, [pc, #52]	; (8000504 <__libc_init_array+0x38>)
 80004d0:	4c0d      	ldr	r4, [pc, #52]	; (8000508 <__libc_init_array+0x3c>)
 80004d2:	1ba4      	subs	r4, r4, r6
 80004d4:	10a4      	asrs	r4, r4, #2
 80004d6:	2500      	movs	r5, #0
 80004d8:	42a5      	cmp	r5, r4
 80004da:	d109      	bne.n	80004f0 <__libc_init_array+0x24>
 80004dc:	4e0b      	ldr	r6, [pc, #44]	; (800050c <__libc_init_array+0x40>)
 80004de:	4c0c      	ldr	r4, [pc, #48]	; (8000510 <__libc_init_array+0x44>)
 80004e0:	f000 fc88 	bl	8000df4 <_init>
 80004e4:	1ba4      	subs	r4, r4, r6
 80004e6:	10a4      	asrs	r4, r4, #2
 80004e8:	2500      	movs	r5, #0
 80004ea:	42a5      	cmp	r5, r4
 80004ec:	d105      	bne.n	80004fa <__libc_init_array+0x2e>
 80004ee:	bd70      	pop	{r4, r5, r6, pc}
 80004f0:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80004f4:	4798      	blx	r3
 80004f6:	3501      	adds	r5, #1
 80004f8:	e7ee      	b.n	80004d8 <__libc_init_array+0xc>
 80004fa:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80004fe:	4798      	blx	r3
 8000500:	3501      	adds	r5, #1
 8000502:	e7f2      	b.n	80004ea <__libc_init_array+0x1e>
 8000504:	08000e9c 	.word	0x08000e9c
 8000508:	08000e9c 	.word	0x08000e9c
 800050c:	08000e9c 	.word	0x08000e9c
 8000510:	08000ea0 	.word	0x08000ea0

08000514 <memset>:
 8000514:	4402      	add	r2, r0
 8000516:	4603      	mov	r3, r0
 8000518:	4293      	cmp	r3, r2
 800051a:	d100      	bne.n	800051e <memset+0xa>
 800051c:	4770      	bx	lr
 800051e:	f803 1b01 	strb.w	r1, [r3], #1
 8000522:	e7f9      	b.n	8000518 <memset+0x4>

08000524 <_puts_r>:
 8000524:	b570      	push	{r4, r5, r6, lr}
 8000526:	460e      	mov	r6, r1
 8000528:	4605      	mov	r5, r0
 800052a:	b118      	cbz	r0, 8000534 <_puts_r+0x10>
 800052c:	6983      	ldr	r3, [r0, #24]
 800052e:	b90b      	cbnz	r3, 8000534 <_puts_r+0x10>
 8000530:	f000 fa0c 	bl	800094c <__sinit>
 8000534:	69ab      	ldr	r3, [r5, #24]
 8000536:	68ac      	ldr	r4, [r5, #8]
 8000538:	b913      	cbnz	r3, 8000540 <_puts_r+0x1c>
 800053a:	4628      	mov	r0, r5
 800053c:	f000 fa06 	bl	800094c <__sinit>
 8000540:	4b23      	ldr	r3, [pc, #140]	; (80005d0 <_puts_r+0xac>)
 8000542:	429c      	cmp	r4, r3
 8000544:	d117      	bne.n	8000576 <_puts_r+0x52>
 8000546:	686c      	ldr	r4, [r5, #4]
 8000548:	89a3      	ldrh	r3, [r4, #12]
 800054a:	071b      	lsls	r3, r3, #28
 800054c:	d51d      	bpl.n	800058a <_puts_r+0x66>
 800054e:	6923      	ldr	r3, [r4, #16]
 8000550:	b1db      	cbz	r3, 800058a <_puts_r+0x66>
 8000552:	3e01      	subs	r6, #1
 8000554:	68a3      	ldr	r3, [r4, #8]
 8000556:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 800055a:	3b01      	subs	r3, #1
 800055c:	60a3      	str	r3, [r4, #8]
 800055e:	b9e9      	cbnz	r1, 800059c <_puts_r+0x78>
 8000560:	2b00      	cmp	r3, #0
 8000562:	da2e      	bge.n	80005c2 <_puts_r+0x9e>
 8000564:	4622      	mov	r2, r4
 8000566:	210a      	movs	r1, #10
 8000568:	4628      	mov	r0, r5
 800056a:	f000 f83f 	bl	80005ec <__swbuf_r>
 800056e:	3001      	adds	r0, #1
 8000570:	d011      	beq.n	8000596 <_puts_r+0x72>
 8000572:	200a      	movs	r0, #10
 8000574:	e011      	b.n	800059a <_puts_r+0x76>
 8000576:	4b17      	ldr	r3, [pc, #92]	; (80005d4 <_puts_r+0xb0>)
 8000578:	429c      	cmp	r4, r3
 800057a:	d101      	bne.n	8000580 <_puts_r+0x5c>
 800057c:	68ac      	ldr	r4, [r5, #8]
 800057e:	e7e3      	b.n	8000548 <_puts_r+0x24>
 8000580:	4b15      	ldr	r3, [pc, #84]	; (80005d8 <_puts_r+0xb4>)
 8000582:	429c      	cmp	r4, r3
 8000584:	bf08      	it	eq
 8000586:	68ec      	ldreq	r4, [r5, #12]
 8000588:	e7de      	b.n	8000548 <_puts_r+0x24>
 800058a:	4621      	mov	r1, r4
 800058c:	4628      	mov	r0, r5
 800058e:	f000 f87f 	bl	8000690 <__swsetup_r>
 8000592:	2800      	cmp	r0, #0
 8000594:	d0dd      	beq.n	8000552 <_puts_r+0x2e>
 8000596:	f04f 30ff 	mov.w	r0, #4294967295
 800059a:	bd70      	pop	{r4, r5, r6, pc}
 800059c:	2b00      	cmp	r3, #0
 800059e:	da04      	bge.n	80005aa <_puts_r+0x86>
 80005a0:	69a2      	ldr	r2, [r4, #24]
 80005a2:	429a      	cmp	r2, r3
 80005a4:	dc06      	bgt.n	80005b4 <_puts_r+0x90>
 80005a6:	290a      	cmp	r1, #10
 80005a8:	d004      	beq.n	80005b4 <_puts_r+0x90>
 80005aa:	6823      	ldr	r3, [r4, #0]
 80005ac:	1c5a      	adds	r2, r3, #1
 80005ae:	6022      	str	r2, [r4, #0]
 80005b0:	7019      	strb	r1, [r3, #0]
 80005b2:	e7cf      	b.n	8000554 <_puts_r+0x30>
 80005b4:	4622      	mov	r2, r4
 80005b6:	4628      	mov	r0, r5
 80005b8:	f000 f818 	bl	80005ec <__swbuf_r>
 80005bc:	3001      	adds	r0, #1
 80005be:	d1c9      	bne.n	8000554 <_puts_r+0x30>
 80005c0:	e7e9      	b.n	8000596 <_puts_r+0x72>
 80005c2:	6823      	ldr	r3, [r4, #0]
 80005c4:	200a      	movs	r0, #10
 80005c6:	1c5a      	adds	r2, r3, #1
 80005c8:	6022      	str	r2, [r4, #0]
 80005ca:	7018      	strb	r0, [r3, #0]
 80005cc:	e7e5      	b.n	800059a <_puts_r+0x76>
 80005ce:	bf00      	nop
 80005d0:	08000e5c 	.word	0x08000e5c
 80005d4:	08000e7c 	.word	0x08000e7c
 80005d8:	08000e3c 	.word	0x08000e3c

080005dc <puts>:
 80005dc:	4b02      	ldr	r3, [pc, #8]	; (80005e8 <puts+0xc>)
 80005de:	4601      	mov	r1, r0
 80005e0:	6818      	ldr	r0, [r3, #0]
 80005e2:	f7ff bf9f 	b.w	8000524 <_puts_r>
 80005e6:	bf00      	nop
 80005e8:	2000000c 	.word	0x2000000c

080005ec <__swbuf_r>:
 80005ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80005ee:	460e      	mov	r6, r1
 80005f0:	4614      	mov	r4, r2
 80005f2:	4605      	mov	r5, r0
 80005f4:	b118      	cbz	r0, 80005fe <__swbuf_r+0x12>
 80005f6:	6983      	ldr	r3, [r0, #24]
 80005f8:	b90b      	cbnz	r3, 80005fe <__swbuf_r+0x12>
 80005fa:	f000 f9a7 	bl	800094c <__sinit>
 80005fe:	4b21      	ldr	r3, [pc, #132]	; (8000684 <__swbuf_r+0x98>)
 8000600:	429c      	cmp	r4, r3
 8000602:	d12a      	bne.n	800065a <__swbuf_r+0x6e>
 8000604:	686c      	ldr	r4, [r5, #4]
 8000606:	69a3      	ldr	r3, [r4, #24]
 8000608:	60a3      	str	r3, [r4, #8]
 800060a:	89a3      	ldrh	r3, [r4, #12]
 800060c:	071a      	lsls	r2, r3, #28
 800060e:	d52e      	bpl.n	800066e <__swbuf_r+0x82>
 8000610:	6923      	ldr	r3, [r4, #16]
 8000612:	b363      	cbz	r3, 800066e <__swbuf_r+0x82>
 8000614:	6923      	ldr	r3, [r4, #16]
 8000616:	6820      	ldr	r0, [r4, #0]
 8000618:	1ac0      	subs	r0, r0, r3
 800061a:	6963      	ldr	r3, [r4, #20]
 800061c:	b2f6      	uxtb	r6, r6
 800061e:	4283      	cmp	r3, r0
 8000620:	4637      	mov	r7, r6
 8000622:	dc04      	bgt.n	800062e <__swbuf_r+0x42>
 8000624:	4621      	mov	r1, r4
 8000626:	4628      	mov	r0, r5
 8000628:	f000 f926 	bl	8000878 <_fflush_r>
 800062c:	bb28      	cbnz	r0, 800067a <__swbuf_r+0x8e>
 800062e:	68a3      	ldr	r3, [r4, #8]
 8000630:	3b01      	subs	r3, #1
 8000632:	60a3      	str	r3, [r4, #8]
 8000634:	6823      	ldr	r3, [r4, #0]
 8000636:	1c5a      	adds	r2, r3, #1
 8000638:	6022      	str	r2, [r4, #0]
 800063a:	701e      	strb	r6, [r3, #0]
 800063c:	6963      	ldr	r3, [r4, #20]
 800063e:	3001      	adds	r0, #1
 8000640:	4283      	cmp	r3, r0
 8000642:	d004      	beq.n	800064e <__swbuf_r+0x62>
 8000644:	89a3      	ldrh	r3, [r4, #12]
 8000646:	07db      	lsls	r3, r3, #31
 8000648:	d519      	bpl.n	800067e <__swbuf_r+0x92>
 800064a:	2e0a      	cmp	r6, #10
 800064c:	d117      	bne.n	800067e <__swbuf_r+0x92>
 800064e:	4621      	mov	r1, r4
 8000650:	4628      	mov	r0, r5
 8000652:	f000 f911 	bl	8000878 <_fflush_r>
 8000656:	b190      	cbz	r0, 800067e <__swbuf_r+0x92>
 8000658:	e00f      	b.n	800067a <__swbuf_r+0x8e>
 800065a:	4b0b      	ldr	r3, [pc, #44]	; (8000688 <__swbuf_r+0x9c>)
 800065c:	429c      	cmp	r4, r3
 800065e:	d101      	bne.n	8000664 <__swbuf_r+0x78>
 8000660:	68ac      	ldr	r4, [r5, #8]
 8000662:	e7d0      	b.n	8000606 <__swbuf_r+0x1a>
 8000664:	4b09      	ldr	r3, [pc, #36]	; (800068c <__swbuf_r+0xa0>)
 8000666:	429c      	cmp	r4, r3
 8000668:	bf08      	it	eq
 800066a:	68ec      	ldreq	r4, [r5, #12]
 800066c:	e7cb      	b.n	8000606 <__swbuf_r+0x1a>
 800066e:	4621      	mov	r1, r4
 8000670:	4628      	mov	r0, r5
 8000672:	f000 f80d 	bl	8000690 <__swsetup_r>
 8000676:	2800      	cmp	r0, #0
 8000678:	d0cc      	beq.n	8000614 <__swbuf_r+0x28>
 800067a:	f04f 37ff 	mov.w	r7, #4294967295
 800067e:	4638      	mov	r0, r7
 8000680:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000682:	bf00      	nop
 8000684:	08000e5c 	.word	0x08000e5c
 8000688:	08000e7c 	.word	0x08000e7c
 800068c:	08000e3c 	.word	0x08000e3c

08000690 <__swsetup_r>:
 8000690:	4b32      	ldr	r3, [pc, #200]	; (800075c <__swsetup_r+0xcc>)
 8000692:	b570      	push	{r4, r5, r6, lr}
 8000694:	681d      	ldr	r5, [r3, #0]
 8000696:	4606      	mov	r6, r0
 8000698:	460c      	mov	r4, r1
 800069a:	b125      	cbz	r5, 80006a6 <__swsetup_r+0x16>
 800069c:	69ab      	ldr	r3, [r5, #24]
 800069e:	b913      	cbnz	r3, 80006a6 <__swsetup_r+0x16>
 80006a0:	4628      	mov	r0, r5
 80006a2:	f000 f953 	bl	800094c <__sinit>
 80006a6:	4b2e      	ldr	r3, [pc, #184]	; (8000760 <__swsetup_r+0xd0>)
 80006a8:	429c      	cmp	r4, r3
 80006aa:	d10f      	bne.n	80006cc <__swsetup_r+0x3c>
 80006ac:	686c      	ldr	r4, [r5, #4]
 80006ae:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80006b2:	b29a      	uxth	r2, r3
 80006b4:	0715      	lsls	r5, r2, #28
 80006b6:	d42c      	bmi.n	8000712 <__swsetup_r+0x82>
 80006b8:	06d0      	lsls	r0, r2, #27
 80006ba:	d411      	bmi.n	80006e0 <__swsetup_r+0x50>
 80006bc:	2209      	movs	r2, #9
 80006be:	6032      	str	r2, [r6, #0]
 80006c0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80006c4:	81a3      	strh	r3, [r4, #12]
 80006c6:	f04f 30ff 	mov.w	r0, #4294967295
 80006ca:	e03e      	b.n	800074a <__swsetup_r+0xba>
 80006cc:	4b25      	ldr	r3, [pc, #148]	; (8000764 <__swsetup_r+0xd4>)
 80006ce:	429c      	cmp	r4, r3
 80006d0:	d101      	bne.n	80006d6 <__swsetup_r+0x46>
 80006d2:	68ac      	ldr	r4, [r5, #8]
 80006d4:	e7eb      	b.n	80006ae <__swsetup_r+0x1e>
 80006d6:	4b24      	ldr	r3, [pc, #144]	; (8000768 <__swsetup_r+0xd8>)
 80006d8:	429c      	cmp	r4, r3
 80006da:	bf08      	it	eq
 80006dc:	68ec      	ldreq	r4, [r5, #12]
 80006de:	e7e6      	b.n	80006ae <__swsetup_r+0x1e>
 80006e0:	0751      	lsls	r1, r2, #29
 80006e2:	d512      	bpl.n	800070a <__swsetup_r+0x7a>
 80006e4:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80006e6:	b141      	cbz	r1, 80006fa <__swsetup_r+0x6a>
 80006e8:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80006ec:	4299      	cmp	r1, r3
 80006ee:	d002      	beq.n	80006f6 <__swsetup_r+0x66>
 80006f0:	4630      	mov	r0, r6
 80006f2:	f000 fa19 	bl	8000b28 <_free_r>
 80006f6:	2300      	movs	r3, #0
 80006f8:	6363      	str	r3, [r4, #52]	; 0x34
 80006fa:	89a3      	ldrh	r3, [r4, #12]
 80006fc:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8000700:	81a3      	strh	r3, [r4, #12]
 8000702:	2300      	movs	r3, #0
 8000704:	6063      	str	r3, [r4, #4]
 8000706:	6923      	ldr	r3, [r4, #16]
 8000708:	6023      	str	r3, [r4, #0]
 800070a:	89a3      	ldrh	r3, [r4, #12]
 800070c:	f043 0308 	orr.w	r3, r3, #8
 8000710:	81a3      	strh	r3, [r4, #12]
 8000712:	6923      	ldr	r3, [r4, #16]
 8000714:	b94b      	cbnz	r3, 800072a <__swsetup_r+0x9a>
 8000716:	89a3      	ldrh	r3, [r4, #12]
 8000718:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800071c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000720:	d003      	beq.n	800072a <__swsetup_r+0x9a>
 8000722:	4621      	mov	r1, r4
 8000724:	4630      	mov	r0, r6
 8000726:	f000 f9bf 	bl	8000aa8 <__smakebuf_r>
 800072a:	89a2      	ldrh	r2, [r4, #12]
 800072c:	f012 0301 	ands.w	r3, r2, #1
 8000730:	d00c      	beq.n	800074c <__swsetup_r+0xbc>
 8000732:	2300      	movs	r3, #0
 8000734:	60a3      	str	r3, [r4, #8]
 8000736:	6963      	ldr	r3, [r4, #20]
 8000738:	425b      	negs	r3, r3
 800073a:	61a3      	str	r3, [r4, #24]
 800073c:	6923      	ldr	r3, [r4, #16]
 800073e:	b953      	cbnz	r3, 8000756 <__swsetup_r+0xc6>
 8000740:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000744:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 8000748:	d1ba      	bne.n	80006c0 <__swsetup_r+0x30>
 800074a:	bd70      	pop	{r4, r5, r6, pc}
 800074c:	0792      	lsls	r2, r2, #30
 800074e:	bf58      	it	pl
 8000750:	6963      	ldrpl	r3, [r4, #20]
 8000752:	60a3      	str	r3, [r4, #8]
 8000754:	e7f2      	b.n	800073c <__swsetup_r+0xac>
 8000756:	2000      	movs	r0, #0
 8000758:	e7f7      	b.n	800074a <__swsetup_r+0xba>
 800075a:	bf00      	nop
 800075c:	2000000c 	.word	0x2000000c
 8000760:	08000e5c 	.word	0x08000e5c
 8000764:	08000e7c 	.word	0x08000e7c
 8000768:	08000e3c 	.word	0x08000e3c

0800076c <__sflush_r>:
 800076c:	898a      	ldrh	r2, [r1, #12]
 800076e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000772:	4605      	mov	r5, r0
 8000774:	0710      	lsls	r0, r2, #28
 8000776:	460c      	mov	r4, r1
 8000778:	d458      	bmi.n	800082c <__sflush_r+0xc0>
 800077a:	684b      	ldr	r3, [r1, #4]
 800077c:	2b00      	cmp	r3, #0
 800077e:	dc05      	bgt.n	800078c <__sflush_r+0x20>
 8000780:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8000782:	2b00      	cmp	r3, #0
 8000784:	dc02      	bgt.n	800078c <__sflush_r+0x20>
 8000786:	2000      	movs	r0, #0
 8000788:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800078c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800078e:	2e00      	cmp	r6, #0
 8000790:	d0f9      	beq.n	8000786 <__sflush_r+0x1a>
 8000792:	2300      	movs	r3, #0
 8000794:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8000798:	682f      	ldr	r7, [r5, #0]
 800079a:	6a21      	ldr	r1, [r4, #32]
 800079c:	602b      	str	r3, [r5, #0]
 800079e:	d032      	beq.n	8000806 <__sflush_r+0x9a>
 80007a0:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80007a2:	89a3      	ldrh	r3, [r4, #12]
 80007a4:	075a      	lsls	r2, r3, #29
 80007a6:	d505      	bpl.n	80007b4 <__sflush_r+0x48>
 80007a8:	6863      	ldr	r3, [r4, #4]
 80007aa:	1ac0      	subs	r0, r0, r3
 80007ac:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80007ae:	b10b      	cbz	r3, 80007b4 <__sflush_r+0x48>
 80007b0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80007b2:	1ac0      	subs	r0, r0, r3
 80007b4:	2300      	movs	r3, #0
 80007b6:	4602      	mov	r2, r0
 80007b8:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80007ba:	6a21      	ldr	r1, [r4, #32]
 80007bc:	4628      	mov	r0, r5
 80007be:	47b0      	blx	r6
 80007c0:	1c43      	adds	r3, r0, #1
 80007c2:	89a3      	ldrh	r3, [r4, #12]
 80007c4:	d106      	bne.n	80007d4 <__sflush_r+0x68>
 80007c6:	6829      	ldr	r1, [r5, #0]
 80007c8:	291d      	cmp	r1, #29
 80007ca:	d848      	bhi.n	800085e <__sflush_r+0xf2>
 80007cc:	4a29      	ldr	r2, [pc, #164]	; (8000874 <__sflush_r+0x108>)
 80007ce:	40ca      	lsrs	r2, r1
 80007d0:	07d6      	lsls	r6, r2, #31
 80007d2:	d544      	bpl.n	800085e <__sflush_r+0xf2>
 80007d4:	2200      	movs	r2, #0
 80007d6:	6062      	str	r2, [r4, #4]
 80007d8:	04d9      	lsls	r1, r3, #19
 80007da:	6922      	ldr	r2, [r4, #16]
 80007dc:	6022      	str	r2, [r4, #0]
 80007de:	d504      	bpl.n	80007ea <__sflush_r+0x7e>
 80007e0:	1c42      	adds	r2, r0, #1
 80007e2:	d101      	bne.n	80007e8 <__sflush_r+0x7c>
 80007e4:	682b      	ldr	r3, [r5, #0]
 80007e6:	b903      	cbnz	r3, 80007ea <__sflush_r+0x7e>
 80007e8:	6560      	str	r0, [r4, #84]	; 0x54
 80007ea:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80007ec:	602f      	str	r7, [r5, #0]
 80007ee:	2900      	cmp	r1, #0
 80007f0:	d0c9      	beq.n	8000786 <__sflush_r+0x1a>
 80007f2:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80007f6:	4299      	cmp	r1, r3
 80007f8:	d002      	beq.n	8000800 <__sflush_r+0x94>
 80007fa:	4628      	mov	r0, r5
 80007fc:	f000 f994 	bl	8000b28 <_free_r>
 8000800:	2000      	movs	r0, #0
 8000802:	6360      	str	r0, [r4, #52]	; 0x34
 8000804:	e7c0      	b.n	8000788 <__sflush_r+0x1c>
 8000806:	2301      	movs	r3, #1
 8000808:	4628      	mov	r0, r5
 800080a:	47b0      	blx	r6
 800080c:	1c41      	adds	r1, r0, #1
 800080e:	d1c8      	bne.n	80007a2 <__sflush_r+0x36>
 8000810:	682b      	ldr	r3, [r5, #0]
 8000812:	2b00      	cmp	r3, #0
 8000814:	d0c5      	beq.n	80007a2 <__sflush_r+0x36>
 8000816:	2b1d      	cmp	r3, #29
 8000818:	d001      	beq.n	800081e <__sflush_r+0xb2>
 800081a:	2b16      	cmp	r3, #22
 800081c:	d101      	bne.n	8000822 <__sflush_r+0xb6>
 800081e:	602f      	str	r7, [r5, #0]
 8000820:	e7b1      	b.n	8000786 <__sflush_r+0x1a>
 8000822:	89a3      	ldrh	r3, [r4, #12]
 8000824:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000828:	81a3      	strh	r3, [r4, #12]
 800082a:	e7ad      	b.n	8000788 <__sflush_r+0x1c>
 800082c:	690f      	ldr	r7, [r1, #16]
 800082e:	2f00      	cmp	r7, #0
 8000830:	d0a9      	beq.n	8000786 <__sflush_r+0x1a>
 8000832:	0793      	lsls	r3, r2, #30
 8000834:	680e      	ldr	r6, [r1, #0]
 8000836:	bf08      	it	eq
 8000838:	694b      	ldreq	r3, [r1, #20]
 800083a:	600f      	str	r7, [r1, #0]
 800083c:	bf18      	it	ne
 800083e:	2300      	movne	r3, #0
 8000840:	eba6 0807 	sub.w	r8, r6, r7
 8000844:	608b      	str	r3, [r1, #8]
 8000846:	f1b8 0f00 	cmp.w	r8, #0
 800084a:	dd9c      	ble.n	8000786 <__sflush_r+0x1a>
 800084c:	4643      	mov	r3, r8
 800084e:	463a      	mov	r2, r7
 8000850:	6a21      	ldr	r1, [r4, #32]
 8000852:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8000854:	4628      	mov	r0, r5
 8000856:	47b0      	blx	r6
 8000858:	2800      	cmp	r0, #0
 800085a:	dc06      	bgt.n	800086a <__sflush_r+0xfe>
 800085c:	89a3      	ldrh	r3, [r4, #12]
 800085e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000862:	81a3      	strh	r3, [r4, #12]
 8000864:	f04f 30ff 	mov.w	r0, #4294967295
 8000868:	e78e      	b.n	8000788 <__sflush_r+0x1c>
 800086a:	4407      	add	r7, r0
 800086c:	eba8 0800 	sub.w	r8, r8, r0
 8000870:	e7e9      	b.n	8000846 <__sflush_r+0xda>
 8000872:	bf00      	nop
 8000874:	20400001 	.word	0x20400001

08000878 <_fflush_r>:
 8000878:	b538      	push	{r3, r4, r5, lr}
 800087a:	690b      	ldr	r3, [r1, #16]
 800087c:	4605      	mov	r5, r0
 800087e:	460c      	mov	r4, r1
 8000880:	b1db      	cbz	r3, 80008ba <_fflush_r+0x42>
 8000882:	b118      	cbz	r0, 800088c <_fflush_r+0x14>
 8000884:	6983      	ldr	r3, [r0, #24]
 8000886:	b90b      	cbnz	r3, 800088c <_fflush_r+0x14>
 8000888:	f000 f860 	bl	800094c <__sinit>
 800088c:	4b0c      	ldr	r3, [pc, #48]	; (80008c0 <_fflush_r+0x48>)
 800088e:	429c      	cmp	r4, r3
 8000890:	d109      	bne.n	80008a6 <_fflush_r+0x2e>
 8000892:	686c      	ldr	r4, [r5, #4]
 8000894:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000898:	b17b      	cbz	r3, 80008ba <_fflush_r+0x42>
 800089a:	4621      	mov	r1, r4
 800089c:	4628      	mov	r0, r5
 800089e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80008a2:	f7ff bf63 	b.w	800076c <__sflush_r>
 80008a6:	4b07      	ldr	r3, [pc, #28]	; (80008c4 <_fflush_r+0x4c>)
 80008a8:	429c      	cmp	r4, r3
 80008aa:	d101      	bne.n	80008b0 <_fflush_r+0x38>
 80008ac:	68ac      	ldr	r4, [r5, #8]
 80008ae:	e7f1      	b.n	8000894 <_fflush_r+0x1c>
 80008b0:	4b05      	ldr	r3, [pc, #20]	; (80008c8 <_fflush_r+0x50>)
 80008b2:	429c      	cmp	r4, r3
 80008b4:	bf08      	it	eq
 80008b6:	68ec      	ldreq	r4, [r5, #12]
 80008b8:	e7ec      	b.n	8000894 <_fflush_r+0x1c>
 80008ba:	2000      	movs	r0, #0
 80008bc:	bd38      	pop	{r3, r4, r5, pc}
 80008be:	bf00      	nop
 80008c0:	08000e5c 	.word	0x08000e5c
 80008c4:	08000e7c 	.word	0x08000e7c
 80008c8:	08000e3c 	.word	0x08000e3c

080008cc <std>:
 80008cc:	2300      	movs	r3, #0
 80008ce:	b510      	push	{r4, lr}
 80008d0:	4604      	mov	r4, r0
 80008d2:	e9c0 3300 	strd	r3, r3, [r0]
 80008d6:	6083      	str	r3, [r0, #8]
 80008d8:	8181      	strh	r1, [r0, #12]
 80008da:	6643      	str	r3, [r0, #100]	; 0x64
 80008dc:	81c2      	strh	r2, [r0, #14]
 80008de:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80008e2:	6183      	str	r3, [r0, #24]
 80008e4:	4619      	mov	r1, r3
 80008e6:	2208      	movs	r2, #8
 80008e8:	305c      	adds	r0, #92	; 0x5c
 80008ea:	f7ff fe13 	bl	8000514 <memset>
 80008ee:	4b05      	ldr	r3, [pc, #20]	; (8000904 <std+0x38>)
 80008f0:	6263      	str	r3, [r4, #36]	; 0x24
 80008f2:	4b05      	ldr	r3, [pc, #20]	; (8000908 <std+0x3c>)
 80008f4:	62a3      	str	r3, [r4, #40]	; 0x28
 80008f6:	4b05      	ldr	r3, [pc, #20]	; (800090c <std+0x40>)
 80008f8:	62e3      	str	r3, [r4, #44]	; 0x2c
 80008fa:	4b05      	ldr	r3, [pc, #20]	; (8000910 <std+0x44>)
 80008fc:	6224      	str	r4, [r4, #32]
 80008fe:	6323      	str	r3, [r4, #48]	; 0x30
 8000900:	bd10      	pop	{r4, pc}
 8000902:	bf00      	nop
 8000904:	08000c99 	.word	0x08000c99
 8000908:	08000cbb 	.word	0x08000cbb
 800090c:	08000cf3 	.word	0x08000cf3
 8000910:	08000d17 	.word	0x08000d17

08000914 <_cleanup_r>:
 8000914:	4901      	ldr	r1, [pc, #4]	; (800091c <_cleanup_r+0x8>)
 8000916:	f000 b885 	b.w	8000a24 <_fwalk_reent>
 800091a:	bf00      	nop
 800091c:	08000879 	.word	0x08000879

08000920 <__sfmoreglue>:
 8000920:	b570      	push	{r4, r5, r6, lr}
 8000922:	1e4a      	subs	r2, r1, #1
 8000924:	2568      	movs	r5, #104	; 0x68
 8000926:	4355      	muls	r5, r2
 8000928:	460e      	mov	r6, r1
 800092a:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800092e:	f000 f949 	bl	8000bc4 <_malloc_r>
 8000932:	4604      	mov	r4, r0
 8000934:	b140      	cbz	r0, 8000948 <__sfmoreglue+0x28>
 8000936:	2100      	movs	r1, #0
 8000938:	e9c0 1600 	strd	r1, r6, [r0]
 800093c:	300c      	adds	r0, #12
 800093e:	60a0      	str	r0, [r4, #8]
 8000940:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000944:	f7ff fde6 	bl	8000514 <memset>
 8000948:	4620      	mov	r0, r4
 800094a:	bd70      	pop	{r4, r5, r6, pc}

0800094c <__sinit>:
 800094c:	6983      	ldr	r3, [r0, #24]
 800094e:	b510      	push	{r4, lr}
 8000950:	4604      	mov	r4, r0
 8000952:	bb33      	cbnz	r3, 80009a2 <__sinit+0x56>
 8000954:	e9c0 3312 	strd	r3, r3, [r0, #72]	; 0x48
 8000958:	6503      	str	r3, [r0, #80]	; 0x50
 800095a:	4b12      	ldr	r3, [pc, #72]	; (80009a4 <__sinit+0x58>)
 800095c:	4a12      	ldr	r2, [pc, #72]	; (80009a8 <__sinit+0x5c>)
 800095e:	681b      	ldr	r3, [r3, #0]
 8000960:	6282      	str	r2, [r0, #40]	; 0x28
 8000962:	4298      	cmp	r0, r3
 8000964:	bf04      	itt	eq
 8000966:	2301      	moveq	r3, #1
 8000968:	6183      	streq	r3, [r0, #24]
 800096a:	f000 f81f 	bl	80009ac <__sfp>
 800096e:	6060      	str	r0, [r4, #4]
 8000970:	4620      	mov	r0, r4
 8000972:	f000 f81b 	bl	80009ac <__sfp>
 8000976:	60a0      	str	r0, [r4, #8]
 8000978:	4620      	mov	r0, r4
 800097a:	f000 f817 	bl	80009ac <__sfp>
 800097e:	2200      	movs	r2, #0
 8000980:	60e0      	str	r0, [r4, #12]
 8000982:	2104      	movs	r1, #4
 8000984:	6860      	ldr	r0, [r4, #4]
 8000986:	f7ff ffa1 	bl	80008cc <std>
 800098a:	2201      	movs	r2, #1
 800098c:	2109      	movs	r1, #9
 800098e:	68a0      	ldr	r0, [r4, #8]
 8000990:	f7ff ff9c 	bl	80008cc <std>
 8000994:	2202      	movs	r2, #2
 8000996:	2112      	movs	r1, #18
 8000998:	68e0      	ldr	r0, [r4, #12]
 800099a:	f7ff ff97 	bl	80008cc <std>
 800099e:	2301      	movs	r3, #1
 80009a0:	61a3      	str	r3, [r4, #24]
 80009a2:	bd10      	pop	{r4, pc}
 80009a4:	08000e38 	.word	0x08000e38
 80009a8:	08000915 	.word	0x08000915

080009ac <__sfp>:
 80009ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80009ae:	4b1b      	ldr	r3, [pc, #108]	; (8000a1c <__sfp+0x70>)
 80009b0:	681e      	ldr	r6, [r3, #0]
 80009b2:	69b3      	ldr	r3, [r6, #24]
 80009b4:	4607      	mov	r7, r0
 80009b6:	b913      	cbnz	r3, 80009be <__sfp+0x12>
 80009b8:	4630      	mov	r0, r6
 80009ba:	f7ff ffc7 	bl	800094c <__sinit>
 80009be:	3648      	adds	r6, #72	; 0x48
 80009c0:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 80009c4:	3b01      	subs	r3, #1
 80009c6:	d503      	bpl.n	80009d0 <__sfp+0x24>
 80009c8:	6833      	ldr	r3, [r6, #0]
 80009ca:	b133      	cbz	r3, 80009da <__sfp+0x2e>
 80009cc:	6836      	ldr	r6, [r6, #0]
 80009ce:	e7f7      	b.n	80009c0 <__sfp+0x14>
 80009d0:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 80009d4:	b16d      	cbz	r5, 80009f2 <__sfp+0x46>
 80009d6:	3468      	adds	r4, #104	; 0x68
 80009d8:	e7f4      	b.n	80009c4 <__sfp+0x18>
 80009da:	2104      	movs	r1, #4
 80009dc:	4638      	mov	r0, r7
 80009de:	f7ff ff9f 	bl	8000920 <__sfmoreglue>
 80009e2:	6030      	str	r0, [r6, #0]
 80009e4:	2800      	cmp	r0, #0
 80009e6:	d1f1      	bne.n	80009cc <__sfp+0x20>
 80009e8:	230c      	movs	r3, #12
 80009ea:	603b      	str	r3, [r7, #0]
 80009ec:	4604      	mov	r4, r0
 80009ee:	4620      	mov	r0, r4
 80009f0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80009f2:	4b0b      	ldr	r3, [pc, #44]	; (8000a20 <__sfp+0x74>)
 80009f4:	6665      	str	r5, [r4, #100]	; 0x64
 80009f6:	e9c4 5500 	strd	r5, r5, [r4]
 80009fa:	60a5      	str	r5, [r4, #8]
 80009fc:	e9c4 3503 	strd	r3, r5, [r4, #12]
 8000a00:	e9c4 5505 	strd	r5, r5, [r4, #20]
 8000a04:	2208      	movs	r2, #8
 8000a06:	4629      	mov	r1, r5
 8000a08:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000a0c:	f7ff fd82 	bl	8000514 <memset>
 8000a10:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000a14:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000a18:	e7e9      	b.n	80009ee <__sfp+0x42>
 8000a1a:	bf00      	nop
 8000a1c:	08000e38 	.word	0x08000e38
 8000a20:	ffff0001 	.word	0xffff0001

08000a24 <_fwalk_reent>:
 8000a24:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000a28:	4680      	mov	r8, r0
 8000a2a:	4689      	mov	r9, r1
 8000a2c:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000a30:	2600      	movs	r6, #0
 8000a32:	b914      	cbnz	r4, 8000a3a <_fwalk_reent+0x16>
 8000a34:	4630      	mov	r0, r6
 8000a36:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000a3a:	e9d4 7501 	ldrd	r7, r5, [r4, #4]
 8000a3e:	3f01      	subs	r7, #1
 8000a40:	d501      	bpl.n	8000a46 <_fwalk_reent+0x22>
 8000a42:	6824      	ldr	r4, [r4, #0]
 8000a44:	e7f5      	b.n	8000a32 <_fwalk_reent+0xe>
 8000a46:	89ab      	ldrh	r3, [r5, #12]
 8000a48:	2b01      	cmp	r3, #1
 8000a4a:	d907      	bls.n	8000a5c <_fwalk_reent+0x38>
 8000a4c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000a50:	3301      	adds	r3, #1
 8000a52:	d003      	beq.n	8000a5c <_fwalk_reent+0x38>
 8000a54:	4629      	mov	r1, r5
 8000a56:	4640      	mov	r0, r8
 8000a58:	47c8      	blx	r9
 8000a5a:	4306      	orrs	r6, r0
 8000a5c:	3568      	adds	r5, #104	; 0x68
 8000a5e:	e7ee      	b.n	8000a3e <_fwalk_reent+0x1a>

08000a60 <__swhatbuf_r>:
 8000a60:	b570      	push	{r4, r5, r6, lr}
 8000a62:	460e      	mov	r6, r1
 8000a64:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000a68:	2900      	cmp	r1, #0
 8000a6a:	b096      	sub	sp, #88	; 0x58
 8000a6c:	4614      	mov	r4, r2
 8000a6e:	461d      	mov	r5, r3
 8000a70:	da07      	bge.n	8000a82 <__swhatbuf_r+0x22>
 8000a72:	2300      	movs	r3, #0
 8000a74:	602b      	str	r3, [r5, #0]
 8000a76:	89b3      	ldrh	r3, [r6, #12]
 8000a78:	061a      	lsls	r2, r3, #24
 8000a7a:	d410      	bmi.n	8000a9e <__swhatbuf_r+0x3e>
 8000a7c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000a80:	e00e      	b.n	8000aa0 <__swhatbuf_r+0x40>
 8000a82:	466a      	mov	r2, sp
 8000a84:	f000 f96e 	bl	8000d64 <_fstat_r>
 8000a88:	2800      	cmp	r0, #0
 8000a8a:	dbf2      	blt.n	8000a72 <__swhatbuf_r+0x12>
 8000a8c:	9a01      	ldr	r2, [sp, #4]
 8000a8e:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8000a92:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8000a96:	425a      	negs	r2, r3
 8000a98:	415a      	adcs	r2, r3
 8000a9a:	602a      	str	r2, [r5, #0]
 8000a9c:	e7ee      	b.n	8000a7c <__swhatbuf_r+0x1c>
 8000a9e:	2340      	movs	r3, #64	; 0x40
 8000aa0:	2000      	movs	r0, #0
 8000aa2:	6023      	str	r3, [r4, #0]
 8000aa4:	b016      	add	sp, #88	; 0x58
 8000aa6:	bd70      	pop	{r4, r5, r6, pc}

08000aa8 <__smakebuf_r>:
 8000aa8:	898b      	ldrh	r3, [r1, #12]
 8000aaa:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8000aac:	079d      	lsls	r5, r3, #30
 8000aae:	4606      	mov	r6, r0
 8000ab0:	460c      	mov	r4, r1
 8000ab2:	d507      	bpl.n	8000ac4 <__smakebuf_r+0x1c>
 8000ab4:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8000ab8:	6023      	str	r3, [r4, #0]
 8000aba:	6123      	str	r3, [r4, #16]
 8000abc:	2301      	movs	r3, #1
 8000abe:	6163      	str	r3, [r4, #20]
 8000ac0:	b002      	add	sp, #8
 8000ac2:	bd70      	pop	{r4, r5, r6, pc}
 8000ac4:	ab01      	add	r3, sp, #4
 8000ac6:	466a      	mov	r2, sp
 8000ac8:	f7ff ffca 	bl	8000a60 <__swhatbuf_r>
 8000acc:	9900      	ldr	r1, [sp, #0]
 8000ace:	4605      	mov	r5, r0
 8000ad0:	4630      	mov	r0, r6
 8000ad2:	f000 f877 	bl	8000bc4 <_malloc_r>
 8000ad6:	b948      	cbnz	r0, 8000aec <__smakebuf_r+0x44>
 8000ad8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000adc:	059a      	lsls	r2, r3, #22
 8000ade:	d4ef      	bmi.n	8000ac0 <__smakebuf_r+0x18>
 8000ae0:	f023 0303 	bic.w	r3, r3, #3
 8000ae4:	f043 0302 	orr.w	r3, r3, #2
 8000ae8:	81a3      	strh	r3, [r4, #12]
 8000aea:	e7e3      	b.n	8000ab4 <__smakebuf_r+0xc>
 8000aec:	4b0d      	ldr	r3, [pc, #52]	; (8000b24 <__smakebuf_r+0x7c>)
 8000aee:	62b3      	str	r3, [r6, #40]	; 0x28
 8000af0:	89a3      	ldrh	r3, [r4, #12]
 8000af2:	6020      	str	r0, [r4, #0]
 8000af4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000af8:	81a3      	strh	r3, [r4, #12]
 8000afa:	9b00      	ldr	r3, [sp, #0]
 8000afc:	6163      	str	r3, [r4, #20]
 8000afe:	9b01      	ldr	r3, [sp, #4]
 8000b00:	6120      	str	r0, [r4, #16]
 8000b02:	b15b      	cbz	r3, 8000b1c <__smakebuf_r+0x74>
 8000b04:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000b08:	4630      	mov	r0, r6
 8000b0a:	f000 f93d 	bl	8000d88 <_isatty_r>
 8000b0e:	b128      	cbz	r0, 8000b1c <__smakebuf_r+0x74>
 8000b10:	89a3      	ldrh	r3, [r4, #12]
 8000b12:	f023 0303 	bic.w	r3, r3, #3
 8000b16:	f043 0301 	orr.w	r3, r3, #1
 8000b1a:	81a3      	strh	r3, [r4, #12]
 8000b1c:	89a3      	ldrh	r3, [r4, #12]
 8000b1e:	431d      	orrs	r5, r3
 8000b20:	81a5      	strh	r5, [r4, #12]
 8000b22:	e7cd      	b.n	8000ac0 <__smakebuf_r+0x18>
 8000b24:	08000915 	.word	0x08000915

08000b28 <_free_r>:
 8000b28:	b538      	push	{r3, r4, r5, lr}
 8000b2a:	4605      	mov	r5, r0
 8000b2c:	2900      	cmp	r1, #0
 8000b2e:	d045      	beq.n	8000bbc <_free_r+0x94>
 8000b30:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000b34:	1f0c      	subs	r4, r1, #4
 8000b36:	2b00      	cmp	r3, #0
 8000b38:	bfb8      	it	lt
 8000b3a:	18e4      	addlt	r4, r4, r3
 8000b3c:	f000 f946 	bl	8000dcc <__malloc_lock>
 8000b40:	4a1f      	ldr	r2, [pc, #124]	; (8000bc0 <_free_r+0x98>)
 8000b42:	6813      	ldr	r3, [r2, #0]
 8000b44:	4610      	mov	r0, r2
 8000b46:	b933      	cbnz	r3, 8000b56 <_free_r+0x2e>
 8000b48:	6063      	str	r3, [r4, #4]
 8000b4a:	6014      	str	r4, [r2, #0]
 8000b4c:	4628      	mov	r0, r5
 8000b4e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000b52:	f000 b93c 	b.w	8000dce <__malloc_unlock>
 8000b56:	42a3      	cmp	r3, r4
 8000b58:	d90c      	bls.n	8000b74 <_free_r+0x4c>
 8000b5a:	6821      	ldr	r1, [r4, #0]
 8000b5c:	1862      	adds	r2, r4, r1
 8000b5e:	4293      	cmp	r3, r2
 8000b60:	bf04      	itt	eq
 8000b62:	681a      	ldreq	r2, [r3, #0]
 8000b64:	685b      	ldreq	r3, [r3, #4]
 8000b66:	6063      	str	r3, [r4, #4]
 8000b68:	bf04      	itt	eq
 8000b6a:	1852      	addeq	r2, r2, r1
 8000b6c:	6022      	streq	r2, [r4, #0]
 8000b6e:	6004      	str	r4, [r0, #0]
 8000b70:	e7ec      	b.n	8000b4c <_free_r+0x24>
 8000b72:	4613      	mov	r3, r2
 8000b74:	685a      	ldr	r2, [r3, #4]
 8000b76:	b10a      	cbz	r2, 8000b7c <_free_r+0x54>
 8000b78:	42a2      	cmp	r2, r4
 8000b7a:	d9fa      	bls.n	8000b72 <_free_r+0x4a>
 8000b7c:	6819      	ldr	r1, [r3, #0]
 8000b7e:	1858      	adds	r0, r3, r1
 8000b80:	42a0      	cmp	r0, r4
 8000b82:	d10b      	bne.n	8000b9c <_free_r+0x74>
 8000b84:	6820      	ldr	r0, [r4, #0]
 8000b86:	4401      	add	r1, r0
 8000b88:	1858      	adds	r0, r3, r1
 8000b8a:	4282      	cmp	r2, r0
 8000b8c:	6019      	str	r1, [r3, #0]
 8000b8e:	d1dd      	bne.n	8000b4c <_free_r+0x24>
 8000b90:	6810      	ldr	r0, [r2, #0]
 8000b92:	6852      	ldr	r2, [r2, #4]
 8000b94:	605a      	str	r2, [r3, #4]
 8000b96:	4401      	add	r1, r0
 8000b98:	6019      	str	r1, [r3, #0]
 8000b9a:	e7d7      	b.n	8000b4c <_free_r+0x24>
 8000b9c:	d902      	bls.n	8000ba4 <_free_r+0x7c>
 8000b9e:	230c      	movs	r3, #12
 8000ba0:	602b      	str	r3, [r5, #0]
 8000ba2:	e7d3      	b.n	8000b4c <_free_r+0x24>
 8000ba4:	6820      	ldr	r0, [r4, #0]
 8000ba6:	1821      	adds	r1, r4, r0
 8000ba8:	428a      	cmp	r2, r1
 8000baa:	bf04      	itt	eq
 8000bac:	6811      	ldreq	r1, [r2, #0]
 8000bae:	6852      	ldreq	r2, [r2, #4]
 8000bb0:	6062      	str	r2, [r4, #4]
 8000bb2:	bf04      	itt	eq
 8000bb4:	1809      	addeq	r1, r1, r0
 8000bb6:	6021      	streq	r1, [r4, #0]
 8000bb8:	605c      	str	r4, [r3, #4]
 8000bba:	e7c7      	b.n	8000b4c <_free_r+0x24>
 8000bbc:	bd38      	pop	{r3, r4, r5, pc}
 8000bbe:	bf00      	nop
 8000bc0:	20000090 	.word	0x20000090

08000bc4 <_malloc_r>:
 8000bc4:	b570      	push	{r4, r5, r6, lr}
 8000bc6:	1ccd      	adds	r5, r1, #3
 8000bc8:	f025 0503 	bic.w	r5, r5, #3
 8000bcc:	3508      	adds	r5, #8
 8000bce:	2d0c      	cmp	r5, #12
 8000bd0:	bf38      	it	cc
 8000bd2:	250c      	movcc	r5, #12
 8000bd4:	2d00      	cmp	r5, #0
 8000bd6:	4606      	mov	r6, r0
 8000bd8:	db01      	blt.n	8000bde <_malloc_r+0x1a>
 8000bda:	42a9      	cmp	r1, r5
 8000bdc:	d903      	bls.n	8000be6 <_malloc_r+0x22>
 8000bde:	230c      	movs	r3, #12
 8000be0:	6033      	str	r3, [r6, #0]
 8000be2:	2000      	movs	r0, #0
 8000be4:	bd70      	pop	{r4, r5, r6, pc}
 8000be6:	f000 f8f1 	bl	8000dcc <__malloc_lock>
 8000bea:	4a21      	ldr	r2, [pc, #132]	; (8000c70 <_malloc_r+0xac>)
 8000bec:	6814      	ldr	r4, [r2, #0]
 8000bee:	4621      	mov	r1, r4
 8000bf0:	b991      	cbnz	r1, 8000c18 <_malloc_r+0x54>
 8000bf2:	4c20      	ldr	r4, [pc, #128]	; (8000c74 <_malloc_r+0xb0>)
 8000bf4:	6823      	ldr	r3, [r4, #0]
 8000bf6:	b91b      	cbnz	r3, 8000c00 <_malloc_r+0x3c>
 8000bf8:	4630      	mov	r0, r6
 8000bfa:	f000 f83d 	bl	8000c78 <_sbrk_r>
 8000bfe:	6020      	str	r0, [r4, #0]
 8000c00:	4629      	mov	r1, r5
 8000c02:	4630      	mov	r0, r6
 8000c04:	f000 f838 	bl	8000c78 <_sbrk_r>
 8000c08:	1c43      	adds	r3, r0, #1
 8000c0a:	d124      	bne.n	8000c56 <_malloc_r+0x92>
 8000c0c:	230c      	movs	r3, #12
 8000c0e:	6033      	str	r3, [r6, #0]
 8000c10:	4630      	mov	r0, r6
 8000c12:	f000 f8dc 	bl	8000dce <__malloc_unlock>
 8000c16:	e7e4      	b.n	8000be2 <_malloc_r+0x1e>
 8000c18:	680b      	ldr	r3, [r1, #0]
 8000c1a:	1b5b      	subs	r3, r3, r5
 8000c1c:	d418      	bmi.n	8000c50 <_malloc_r+0x8c>
 8000c1e:	2b0b      	cmp	r3, #11
 8000c20:	d90f      	bls.n	8000c42 <_malloc_r+0x7e>
 8000c22:	600b      	str	r3, [r1, #0]
 8000c24:	50cd      	str	r5, [r1, r3]
 8000c26:	18cc      	adds	r4, r1, r3
 8000c28:	4630      	mov	r0, r6
 8000c2a:	f000 f8d0 	bl	8000dce <__malloc_unlock>
 8000c2e:	f104 000b 	add.w	r0, r4, #11
 8000c32:	1d23      	adds	r3, r4, #4
 8000c34:	f020 0007 	bic.w	r0, r0, #7
 8000c38:	1ac3      	subs	r3, r0, r3
 8000c3a:	d0d3      	beq.n	8000be4 <_malloc_r+0x20>
 8000c3c:	425a      	negs	r2, r3
 8000c3e:	50e2      	str	r2, [r4, r3]
 8000c40:	e7d0      	b.n	8000be4 <_malloc_r+0x20>
 8000c42:	428c      	cmp	r4, r1
 8000c44:	684b      	ldr	r3, [r1, #4]
 8000c46:	bf16      	itet	ne
 8000c48:	6063      	strne	r3, [r4, #4]
 8000c4a:	6013      	streq	r3, [r2, #0]
 8000c4c:	460c      	movne	r4, r1
 8000c4e:	e7eb      	b.n	8000c28 <_malloc_r+0x64>
 8000c50:	460c      	mov	r4, r1
 8000c52:	6849      	ldr	r1, [r1, #4]
 8000c54:	e7cc      	b.n	8000bf0 <_malloc_r+0x2c>
 8000c56:	1cc4      	adds	r4, r0, #3
 8000c58:	f024 0403 	bic.w	r4, r4, #3
 8000c5c:	42a0      	cmp	r0, r4
 8000c5e:	d005      	beq.n	8000c6c <_malloc_r+0xa8>
 8000c60:	1a21      	subs	r1, r4, r0
 8000c62:	4630      	mov	r0, r6
 8000c64:	f000 f808 	bl	8000c78 <_sbrk_r>
 8000c68:	3001      	adds	r0, #1
 8000c6a:	d0cf      	beq.n	8000c0c <_malloc_r+0x48>
 8000c6c:	6025      	str	r5, [r4, #0]
 8000c6e:	e7db      	b.n	8000c28 <_malloc_r+0x64>
 8000c70:	20000090 	.word	0x20000090
 8000c74:	20000094 	.word	0x20000094

08000c78 <_sbrk_r>:
 8000c78:	b538      	push	{r3, r4, r5, lr}
 8000c7a:	4c06      	ldr	r4, [pc, #24]	; (8000c94 <_sbrk_r+0x1c>)
 8000c7c:	2300      	movs	r3, #0
 8000c7e:	4605      	mov	r5, r0
 8000c80:	4608      	mov	r0, r1
 8000c82:	6023      	str	r3, [r4, #0]
 8000c84:	f7ff fbc6 	bl	8000414 <_sbrk>
 8000c88:	1c43      	adds	r3, r0, #1
 8000c8a:	d102      	bne.n	8000c92 <_sbrk_r+0x1a>
 8000c8c:	6823      	ldr	r3, [r4, #0]
 8000c8e:	b103      	cbz	r3, 8000c92 <_sbrk_r+0x1a>
 8000c90:	602b      	str	r3, [r5, #0]
 8000c92:	bd38      	pop	{r3, r4, r5, pc}
 8000c94:	20000098 	.word	0x20000098

08000c98 <__sread>:
 8000c98:	b510      	push	{r4, lr}
 8000c9a:	460c      	mov	r4, r1
 8000c9c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000ca0:	f000 f896 	bl	8000dd0 <_read_r>
 8000ca4:	2800      	cmp	r0, #0
 8000ca6:	bfab      	itete	ge
 8000ca8:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000caa:	89a3      	ldrhlt	r3, [r4, #12]
 8000cac:	181b      	addge	r3, r3, r0
 8000cae:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000cb2:	bfac      	ite	ge
 8000cb4:	6563      	strge	r3, [r4, #84]	; 0x54
 8000cb6:	81a3      	strhlt	r3, [r4, #12]
 8000cb8:	bd10      	pop	{r4, pc}

08000cba <__swrite>:
 8000cba:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000cbe:	461f      	mov	r7, r3
 8000cc0:	898b      	ldrh	r3, [r1, #12]
 8000cc2:	05db      	lsls	r3, r3, #23
 8000cc4:	4605      	mov	r5, r0
 8000cc6:	460c      	mov	r4, r1
 8000cc8:	4616      	mov	r6, r2
 8000cca:	d505      	bpl.n	8000cd8 <__swrite+0x1e>
 8000ccc:	2302      	movs	r3, #2
 8000cce:	2200      	movs	r2, #0
 8000cd0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000cd4:	f000 f868 	bl	8000da8 <_lseek_r>
 8000cd8:	89a3      	ldrh	r3, [r4, #12]
 8000cda:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000cde:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000ce2:	81a3      	strh	r3, [r4, #12]
 8000ce4:	4632      	mov	r2, r6
 8000ce6:	463b      	mov	r3, r7
 8000ce8:	4628      	mov	r0, r5
 8000cea:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000cee:	f000 b817 	b.w	8000d20 <_write_r>

08000cf2 <__sseek>:
 8000cf2:	b510      	push	{r4, lr}
 8000cf4:	460c      	mov	r4, r1
 8000cf6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000cfa:	f000 f855 	bl	8000da8 <_lseek_r>
 8000cfe:	1c43      	adds	r3, r0, #1
 8000d00:	89a3      	ldrh	r3, [r4, #12]
 8000d02:	bf15      	itete	ne
 8000d04:	6560      	strne	r0, [r4, #84]	; 0x54
 8000d06:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000d0a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000d0e:	81a3      	strheq	r3, [r4, #12]
 8000d10:	bf18      	it	ne
 8000d12:	81a3      	strhne	r3, [r4, #12]
 8000d14:	bd10      	pop	{r4, pc}

08000d16 <__sclose>:
 8000d16:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000d1a:	f000 b813 	b.w	8000d44 <_close_r>
	...

08000d20 <_write_r>:
 8000d20:	b538      	push	{r3, r4, r5, lr}
 8000d22:	4c07      	ldr	r4, [pc, #28]	; (8000d40 <_write_r+0x20>)
 8000d24:	4605      	mov	r5, r0
 8000d26:	4608      	mov	r0, r1
 8000d28:	4611      	mov	r1, r2
 8000d2a:	2200      	movs	r2, #0
 8000d2c:	6022      	str	r2, [r4, #0]
 8000d2e:	461a      	mov	r2, r3
 8000d30:	f7ff fb23 	bl	800037a <_write>
 8000d34:	1c43      	adds	r3, r0, #1
 8000d36:	d102      	bne.n	8000d3e <_write_r+0x1e>
 8000d38:	6823      	ldr	r3, [r4, #0]
 8000d3a:	b103      	cbz	r3, 8000d3e <_write_r+0x1e>
 8000d3c:	602b      	str	r3, [r5, #0]
 8000d3e:	bd38      	pop	{r3, r4, r5, pc}
 8000d40:	20000098 	.word	0x20000098

08000d44 <_close_r>:
 8000d44:	b538      	push	{r3, r4, r5, lr}
 8000d46:	4c06      	ldr	r4, [pc, #24]	; (8000d60 <_close_r+0x1c>)
 8000d48:	2300      	movs	r3, #0
 8000d4a:	4605      	mov	r5, r0
 8000d4c:	4608      	mov	r0, r1
 8000d4e:	6023      	str	r3, [r4, #0]
 8000d50:	f7ff fb2f 	bl	80003b2 <_close>
 8000d54:	1c43      	adds	r3, r0, #1
 8000d56:	d102      	bne.n	8000d5e <_close_r+0x1a>
 8000d58:	6823      	ldr	r3, [r4, #0]
 8000d5a:	b103      	cbz	r3, 8000d5e <_close_r+0x1a>
 8000d5c:	602b      	str	r3, [r5, #0]
 8000d5e:	bd38      	pop	{r3, r4, r5, pc}
 8000d60:	20000098 	.word	0x20000098

08000d64 <_fstat_r>:
 8000d64:	b538      	push	{r3, r4, r5, lr}
 8000d66:	4c07      	ldr	r4, [pc, #28]	; (8000d84 <_fstat_r+0x20>)
 8000d68:	2300      	movs	r3, #0
 8000d6a:	4605      	mov	r5, r0
 8000d6c:	4608      	mov	r0, r1
 8000d6e:	4611      	mov	r1, r2
 8000d70:	6023      	str	r3, [r4, #0]
 8000d72:	f7ff fb29 	bl	80003c8 <_fstat>
 8000d76:	1c43      	adds	r3, r0, #1
 8000d78:	d102      	bne.n	8000d80 <_fstat_r+0x1c>
 8000d7a:	6823      	ldr	r3, [r4, #0]
 8000d7c:	b103      	cbz	r3, 8000d80 <_fstat_r+0x1c>
 8000d7e:	602b      	str	r3, [r5, #0]
 8000d80:	bd38      	pop	{r3, r4, r5, pc}
 8000d82:	bf00      	nop
 8000d84:	20000098 	.word	0x20000098

08000d88 <_isatty_r>:
 8000d88:	b538      	push	{r3, r4, r5, lr}
 8000d8a:	4c06      	ldr	r4, [pc, #24]	; (8000da4 <_isatty_r+0x1c>)
 8000d8c:	2300      	movs	r3, #0
 8000d8e:	4605      	mov	r5, r0
 8000d90:	4608      	mov	r0, r1
 8000d92:	6023      	str	r3, [r4, #0]
 8000d94:	f7ff fb27 	bl	80003e6 <_isatty>
 8000d98:	1c43      	adds	r3, r0, #1
 8000d9a:	d102      	bne.n	8000da2 <_isatty_r+0x1a>
 8000d9c:	6823      	ldr	r3, [r4, #0]
 8000d9e:	b103      	cbz	r3, 8000da2 <_isatty_r+0x1a>
 8000da0:	602b      	str	r3, [r5, #0]
 8000da2:	bd38      	pop	{r3, r4, r5, pc}
 8000da4:	20000098 	.word	0x20000098

08000da8 <_lseek_r>:
 8000da8:	b538      	push	{r3, r4, r5, lr}
 8000daa:	4c07      	ldr	r4, [pc, #28]	; (8000dc8 <_lseek_r+0x20>)
 8000dac:	4605      	mov	r5, r0
 8000dae:	4608      	mov	r0, r1
 8000db0:	4611      	mov	r1, r2
 8000db2:	2200      	movs	r2, #0
 8000db4:	6022      	str	r2, [r4, #0]
 8000db6:	461a      	mov	r2, r3
 8000db8:	f7ff fb1f 	bl	80003fa <_lseek>
 8000dbc:	1c43      	adds	r3, r0, #1
 8000dbe:	d102      	bne.n	8000dc6 <_lseek_r+0x1e>
 8000dc0:	6823      	ldr	r3, [r4, #0]
 8000dc2:	b103      	cbz	r3, 8000dc6 <_lseek_r+0x1e>
 8000dc4:	602b      	str	r3, [r5, #0]
 8000dc6:	bd38      	pop	{r3, r4, r5, pc}
 8000dc8:	20000098 	.word	0x20000098

08000dcc <__malloc_lock>:
 8000dcc:	4770      	bx	lr

08000dce <__malloc_unlock>:
 8000dce:	4770      	bx	lr

08000dd0 <_read_r>:
 8000dd0:	b538      	push	{r3, r4, r5, lr}
 8000dd2:	4c07      	ldr	r4, [pc, #28]	; (8000df0 <_read_r+0x20>)
 8000dd4:	4605      	mov	r5, r0
 8000dd6:	4608      	mov	r0, r1
 8000dd8:	4611      	mov	r1, r2
 8000dda:	2200      	movs	r2, #0
 8000ddc:	6022      	str	r2, [r4, #0]
 8000dde:	461a      	mov	r2, r3
 8000de0:	f7ff faae 	bl	8000340 <_read>
 8000de4:	1c43      	adds	r3, r0, #1
 8000de6:	d102      	bne.n	8000dee <_read_r+0x1e>
 8000de8:	6823      	ldr	r3, [r4, #0]
 8000dea:	b103      	cbz	r3, 8000dee <_read_r+0x1e>
 8000dec:	602b      	str	r3, [r5, #0]
 8000dee:	bd38      	pop	{r3, r4, r5, pc}
 8000df0:	20000098 	.word	0x20000098

08000df4 <_init>:
 8000df4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000df6:	bf00      	nop
 8000df8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000dfa:	bc08      	pop	{r3}
 8000dfc:	469e      	mov	lr, r3
 8000dfe:	4770      	bx	lr

08000e00 <_fini>:
 8000e00:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000e02:	bf00      	nop
 8000e04:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000e06:	bc08      	pop	{r3}
 8000e08:	469e      	mov	lr, r3
 8000e0a:	4770      	bx	lr
